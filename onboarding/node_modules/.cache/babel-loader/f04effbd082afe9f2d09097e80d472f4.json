{"ast":null,"code":"import _slicedToArray from \"/Users/maryclayton/Documents/LambdaSchool/User-Onboarding/onboarding/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maryclayton/Documents/LambdaSchool/User-Onboarding/onboarding/src/components/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst UserForm = ({\n  errors,\n  touched,\n  values,\n  status\n}) => {\n  //state component\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1]; //effect component\n\n\n  useEffect(() => {\n    if (status) {\n      setUsers([status]);\n    }\n  }, [status]); //closing UseEffect\n  //return\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Welcome to Lambda School!\"), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, error.name), \"; //closing error\", React.createElement(Field, {\n    type: \"text\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, error.email), \"; //closing error\", React.createElement(Field, {\n    type: \"text\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, error.password), \"; //closing error\", React.createElement(\"label\", {\n    className: \"checkout-validation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Accept Terms & Conditions\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"users\",\n    checked: values.users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Sign up\")), users.map(user => React.createElement(\"ul\", {\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Name: \", user.name), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Email: \", user.email), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Password: \", user.password)))); //closing return\n}; //closing function\n//export\n//function\n\n\nconst FormikUserForm = withFormik({\n  //map values to Formik\n  mapPropsToValues({\n    name,\n    email,\n    password,\n    terms\n  }) //return\n  {\n    return {\n      name: name || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      terms: terms || false\n    };\n  },\n\n  //validation Yup\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"name required\"),\n    email: Yup.string().required(\"email required\"),\n    password: Yup.string().required(\"password required\"),\n    terms: Yup.string().required(\"terms and condition required\")\n  })\n}); //axios.post\n\naxios.post(\"https://reqres.in/api/users\", values).then(response => {\n  setStatus(response.data);\n  console.log(response);\n}).catch(error => console.log(error.response)); //export\n\nexport default UserForm;","map":{"version":3,"sources":["/Users/maryclayton/Documents/LambdaSchool/User-Onboarding/onboarding/src/components/Form.js"],"names":["React","useState","useEffect","axios","Form","Field","withFormik","Yup","UserForm","errors","touched","values","status","users","setUsers","name","error","email","password","map","user","id","FormikUserForm","mapPropsToValues","terms","validationSchema","object","shape","string","required","post","then","response","setStatus","data","console","log","catch"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport axios from \"axios\"\nimport {Form, Field, withFormik} from \"formik\";\nimport * as Yup from \"yup\";\n\nconst UserForm = ({errors, touched, values, status}) => {\n//state component\nconst [users, setUsers] = useState([]);\n//effect component\nuseEffect(() => {\n    if (status) {\n        setUsers([status]);\n    }\n}, [status]) //closing UseEffect\n//return\nreturn (\n    <div>\n    <h1>Welcome to Lambda School!</h1>\n    \n    <Form>\n        <Field type=\"text\" name=\"name\"/>\n            {\n                touched.name && errors.name && (\n                <p className=\"error\">{error.name}</p>\n            )}; //closing error\n            <Field type=\"text\" name=\"email\"/>\n            {touched.email && errors.email && (\n                <p className=\"error\">{error.email}</p>\n            )}; //closing error\n            <Field type=\"text\" name=\"password\"/>\n            {touched.password && errors.password && (\n                <p className=\"error\">{error.password}</p>\n            )}; //closing error\n            <label className= \"checkout-validation\">\n                Accept Terms & Conditions\n                <Field \n                type=\"checkbox\"\n                name=\"users\"\n                checked= {values.users}/>\n                <span className=\"checkmark\"/>\n            </label>\n            <button type= \"submit\">Sign up</button>\n            </Form>\n\n            {users.map(user => (\n                <ul key = {user.id}>\n                    <li>Name: {user.name}</li>\n                    <li>Email: {user.email}</li>\n                    <li>Password: {user.password}</li>\n                </ul>\n            ))}\n\n    </div>\n   )  //closing return\n}; //closing function\n//export\n\n//function\nconst FormikUserForm = withFormik({\n    //map values to Formik\n    mapPropsToValues({\n        name, email, password, terms\n    }) \n    //return\n    {\n        return {\n            name: name || \"\",\n            email: email || \"\",\n            password: password || \"\",\n            terms: terms || false\n        };\n    },\n    //validation Yup\n    validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"name required\"),\n        email: Yup.string().required(\"email required\"),\n        password: Yup.string().required(\"password required\"),\n        terms: Yup.string().required(\"terms and condition required\")\n\n    })\n})\n\n//axios.post\naxios.\npost(\"https://reqres.in/api/users\", values)\n.then(response => {\n    setStatus(response.data);\n    console.log(response);\n})\n.catch(error => console.log(error.response));\n\n//export\nexport default UserForm"]},"metadata":{},"sourceType":"module"}