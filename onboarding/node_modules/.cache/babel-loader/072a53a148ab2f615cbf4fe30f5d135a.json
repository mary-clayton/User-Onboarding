{"ast":null,"code":"import _slicedToArray from \"/Users/maryclayton/Documents/LambdaSchool/User-Onboarding/onboarding/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maryclayton/Documents/LambdaSchool/User-Onboarding/onboarding/src/components/Form.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst UserForm = ({\n  errors,\n  touched,\n  values,\n  status\n}) => {\n  //state component\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1]; //effect component\n\n\n  useEffect(() => {\n    if (status) {\n      setUsers([status]);\n    }\n  }, [status]); //closing UseEffect\n  //return\n\n  return React.createElement(\"div\", {\n    className: \"formOne\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Welcome to Lambda School!\"), React.createElement(Form, {\n    className: \"userform\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Name:\", React.createElement(Field, {\n    className: \"inputs\",\n    type: \"text\",\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, errors.name), \"Email:\", React.createElement(Field, {\n    className: \"inputs\",\n    type: \"text\",\n    name: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, errors.email), \"Password:\", React.createElement(Field, {\n    className: \"inputs\",\n    type: \"password\",\n    name: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, errors.password), React.createElement(\"label\", {\n    className: \"checkout-validation\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Accept Terms & Conditions\", React.createElement(Field, {\n    className: \"inputs\",\n    type: \"checkbox\",\n    name: \"users\",\n    checked: values.users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"inputs\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Sign up\")), users.map(user => React.createElement(\"ul\", {\n    key: user.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Name: \", user.name), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Email: \", user.email), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Password: \", user.password)))); //closing return\n}; //closing function\n//export\n//function\n\n\nconst FormikUserForm = withFormik({\n  //map values to Formik\n  mapPropsToValues({\n    name,\n    email,\n    password,\n    terms\n  }) //return\n  {\n    return {\n      name: name || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      terms: terms || false\n    };\n  },\n\n  //validation Yup\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(\"name required\"),\n    email: Yup.string().required(\"email required\"),\n    password: Yup.string().required(\"password required\"),\n    terms: Yup.string().required(\"terms and condition required\")\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    //axios.post\n    axios.post(\"https://reqres.in/api/users\", values).then(response => {\n      setStatus(response.data);\n      console.log(response);\n    }).catch(error => console.log(error.response));\n  }\n\n})(UserForm);\nconsole.log(\"Error, try again!\", FormikUserForm); //export\n\nexport default FormikUserForm;","map":{"version":3,"sources":["/Users/maryclayton/Documents/LambdaSchool/User-Onboarding/onboarding/src/components/Form.js"],"names":["React","useState","useEffect","axios","Form","Field","withFormik","Yup","UserForm","errors","touched","values","status","users","setUsers","name","email","password","map","user","id","FormikUserForm","mapPropsToValues","terms","validationSchema","object","shape","string","required","handleSubmit","setStatus","post","then","response","data","console","log","catch","error"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport axios from \"axios\"\nimport {Form, Field, withFormik} from \"formik\";\nimport * as Yup from \"yup\";\n\nconst UserForm = ({errors, touched, values, status}) => {\n//state component\nconst [users, setUsers] = useState([]);\n//effect component\nuseEffect(() => {\n    if (status) {\n        setUsers([status]);\n    }\n}, [status]) //closing UseEffect\n//return\nreturn (\n    <div className=\"formOne\">\n    <h1>Welcome to Lambda School!</h1>\n    \n    <Form className=\"userform\">\n        Name:\n        <Field className=\"inputs\" type=\"text\" name=\"name\"/>\n            {\n                touched.name && errors.name && (\n                <p className=\"error\">{errors.name}</p>\n            )}\n            Email:\n            <Field className=\"inputs\" type=\"text\" name=\"email\"/>\n            {touched.email && errors.email && (\n                <p className=\"error\">{errors.email}</p>\n            )}\n            Password:\n            <Field className=\"inputs\" type=\"password\" name=\"password\"/>\n            {touched.password && errors.password && (\n                <p className=\"error\">{errors.password}</p>\n            )}\n            <label className= \"checkout-validation\">\n                Accept Terms & Conditions\n                <Field \n                className=\"inputs\"\n                type=\"checkbox\"\n                name=\"users\"\n                checked= {values.users}/>\n                <span className=\"checkmark\"/>\n            </label>\n            <button className=\"inputs\" type= \"submit\">Sign up</button>\n            </Form>\n\n            {users.map(user => (\n                <ul key = {user.id}>\n                    <li>Name: {user.name}</li>\n                    <li>Email: {user.email}</li>\n                    <li>Password: {user.password}</li>\n                </ul>\n            ))}\n\n    </div>\n   )  //closing return\n}; //closing function\n//export\n\n//function\nconst FormikUserForm = withFormik({\n    //map values to Formik\n    mapPropsToValues({\n        name, email, password, terms\n    }) \n    //return\n    {\n        return {\n            name: name || \"\",\n            email: email || \"\",\n            password: password || \"\",\n            terms: terms || false\n        };\n    },\n    //validation Yup\n    validationSchema: Yup.object().shape({\n        name: Yup.string().required(\"name required\"),\n        email: Yup.string().required(\"email required\"),\n        password: Yup.string().required(\"password required\"),\n        terms: Yup.string().required(\"terms and condition required\")\n\n    }),\n\nhandleSubmit(values, {setStatus}) {\n//axios.post\naxios\n.post(\"https://reqres.in/api/users\", values)\n.then(response => {\n    setStatus(response.data);\n    console.log(response);\n})\n.catch(error => console.log(error.response));\n}\n})(UserForm);\nconsole.log(\"Error, try again!\", FormikUserForm);\n\n//export\nexport default FormikUserForm"]},"metadata":{},"sourceType":"module"}